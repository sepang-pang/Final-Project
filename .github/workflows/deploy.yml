# CD

name: Meets CD

on:
  push:
    branches:
      - develop

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: meets-github-actions
  CODE_DEPLOY_APPLICATION_NAME: meets-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: meets-codedeploy-deployment-group


permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3
      #    - uses: actions/checkout@v3
      # (2) JDK 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # (+++) application.properties 생성
      - name: make application.properties
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{secrets.APPLICATION_PROPERTIES}}" > ./application.properties
          touch ./application-oauth.properties
          echo "${{secrets.APPLICATION_OAUTH_PROPERTIES}}" > ./application-oauth.properties
          shell: bash

      # (3) gradlew 실행 권한부여
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      # Gradle build (Test 포함)
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: clean build

      # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # (5) 빌드 결과물을 S3 버킷에 업로드
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --ignore-hidden-files \
            --source .

      # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip